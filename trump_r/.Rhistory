library(tidyverse)
install.packages(c("assertthat", "backports", "boot", "broom", "callr", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "curl", "dbplyr", "digest", "dplyr", "evaluate", "forcats", "fs", "ggplot2", "glue", "gtable", "haven", "highr", "knitr", "lazyeval", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pillar", "processx", "progress", "purrr", "R6", "Rcpp", "readxl", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "stringi", "stringr", "survival", "tibble", "tidyr", "tinytex", "xfun"))
install.packages("sentimentr")
library(sentimentr)
install.packages("jsonlite")
library(jsonlite)
tweets <- fromJSON('trumptweets.json')
View(tweets)
library(tidyverse)
library(sentimentr)
library(jsonlite)
tweets <- fromJSON('trumptweets.json')
View(tweets)
data("presidential_debates_2012")
tweets %>%
get_sentences() %>%
sentiment()
View(tweets)
sentimentTweets <- tweets %>%
get_sentences() %>%
sentiment()
View(presidential_debates_2012)
View(sentimentTweets)
sentimentTweets <- tweets %>%
get_sentences(text) %>%
sentiment()
View(sentimentTweets)
sentimentTweets <- tweets %>%
get_sentences(text) %>%
sentiment() %>%
emotion()
View(sentimentTweets)
sentimentTweets <- tweets %>%
get_sentences(text) %>%
sentiment() %>%
emotionTweets <- tweets %>%
get_sentences(text) %>%
emotion()
sentimentTweets <- tweets %>%
get_sentences() %>%
sentiment() %>%
sentimentTweets <- tweets %>%
get_sentences() %>%
sentiment()
sentimentTweets <- tweets %>%
get_sentences(text) %>%
sentiment()
View(sentimentTweets)
emotion <- tweets %>%
get_sentences(text) %>%
emotion()
View(emotion)
ggplot(emotion, aes(emotion_type)) +
geom_histogram()
ggplot(emotion, aes(emotion_type)) +
geom_histogram(aes(y=stat(count)))
ggplot(emotion, aes(emotion_type)) +
geom_bar(aes(y=stat(count)))
ggplot(emotion, aes(emotion_type)) +
geom_bar()
ggplot(emotion, aes(x = emotion_type)) +
geom_bar()
ggplot(emotion, aes(emotion_type)) +
coord_polar("y", start = 0)
ggplot(emotion, aes(x = emotion_type)) +
coord_polar(aes(y = stat(count)))
coord_polar(aes(theta = "y")
ggplot(emotion, aes(x = emotion_type, y = stat(count))) +
coord_polar(aes(theta = "y"))
ggplot(emotion, aes(x = emotion_type, y = stat(count))) +
coord_polar()
ggplot(emotion, aes(x = emotion_type, y = stat(count))) +
geom_bar()
ggplot(emotion, aes(x = emotion_type, y = stat(count))) +
geom_bar() +
ylim(20000)
ggplot(emotion, aes(x = emotion_type, y = stat(count))) +
geom_bar() +
ylim(20000, 30000)
ggplot(emotion, aes(x = emotion_type, y = stat(count))) +
geom_bar() +
ylim(2000, 30000)
ggplot(emotion, aes(x = emotion_type, y = stat(count))) +
geom_bar()
ggplot(emotion, aes(emotion_type))
ggplot(emotion, aes(emotion_type)) +
geom_bar()
emotion %>% count(emotion_type)
View(emotion)
View(sentimentTweets)
geom_bar()
ggplot(sentimentTweets, aes(sentiment)) +
geom_bar()
ggplot(sentimentTweets, aes(sentiment)) +
geom_histogram()
ggplot(sentimentTweets, aes(sentiment)) +
geom_boxplot()
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_boxplot()
ggplot(sentimentTweets, aes(x=sentiment, y = stat(count))) +
geom_density()
select(sentimentTweets, "sentiment") %>%
summary()
ggplot(sentimentTweets, aes(x=sentiment, y = stat(count))) +
geom_quantile()
ggplot(sentimentTweets, aes(x=sentiment, y = stat(count))) +
geom_density()
ggplot(sentimentTweets, aes(x=sentiment, y = stat(count))) +
geom_quantile()
geom_quantile()
geom_quantile()
ggplot(sentimentTweets, aes(x=sentiment, y = stat(count))) +
geom_quantile()
geom_quantile()
geom_point()
geom_density()
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_density()
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_point()
ggplot(sentimentTweets, aes(x=sentiment, y=retweet_count)) +
geom_point()
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_histogram()
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_histogram(bins=20)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_histogram(bins=30)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_histogram(bins=50)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_histogram(bins=50) +
geom_density(alpha = .2)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_dotplot()
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_dotplot(binwidth = 50)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_dotplot(binwidth = 20)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_dotplot(binwidth = 1)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_dotplot(binwidth = .2)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_dotplot(binwidth = .05)
ggplot(sentimentTweets, aes(x=sentiment)) +
geom_dotplot(binwidth = .01)
clear
hillary <- sentimentTweets %>%
filter(text, fixed('hillary', ignore_case = TRUE))
hillary <- sentimentTweets %>%
filter(text, regex('hillary', ignore_case = TRUE))
View(sentimentTweets)
hillary <- sentimentTweets %>%
select(text) %>%
filter(regex('hillary', ignore_case = TRUE))
hillary <- sentimentTweets %>%
select(text) %>%
filter(str_detect(regex('hillary', ignore_case = TRUE)))
hillary <- sentimentTweets %>%
filter(str_detect(text, regex('hillary', ignore_case = TRUE)))
View(hillary)
ggplot(hillary, aes(sentiment)) +
geom_histogram()
ggplot(hillary, aes(sentiment)) +
geom_density()
select(hillary, "sentiment") %>%
summary()
tweets <- fromJSON('trumptweets.json')
library(tidyverse)
library(sentimentr)
library(jsonlite)
tweets <- fromJSON('trumptweets.json')
View(tweets)
tweetText <- select(tweets, "text")
View(tweetText)
tweetText <- select(tweets, "text") %>%
get_sentences() %>%
emotion()
View(tweetText)
select(tweetText, "emotion_type") %>%
summary()
tweetText <- select(tweets, "text") %>%
get_sentences() %>%
emotion(drop.unused.emotions = TRUE)
select(tweetText, "emotion_type") %>%
summary()
View(tweetText)
sentences <- tweets %>%
get_sentences()
tweets <- fromJSON('trumptweets.json')
sentences <- tweets %>%
get_sentences()
View(sentences)
sentences <- tweets %>%
select("text") %>%
get_sentences()
View(sentences)
sentiment <- sentences %>%
sentiment()
View(sentiment)
sentimentFull <- tweets %>%
get_sentences() %>%
sentiment()
View(sentimentFull)
tweets <- fromJSON('trumptweets.json')
sentences <- tweets %>%
get_sentences()
sentiment <- sentiment(sentences)
sentimentWords < - extract_emotion_terms(sentences)
sentimentWords <- extract_emotion_terms(sentences)
View(sentimentWords)
emotion <- emotion(sentences)
View(emotion)
View(sentences)
profanity <- profanity(sentences)
View(profanity)
View(sentiment)
veterans <- filter(sentiment, str_detect(text, fixed('veteran', ignore_case = FALSE))
veterans <- filter(sentiment, str_detect(text, fixed('veteran', ignore_case = FALSE)))
veterans <- filter(sentiment, str_detect(text, fixed('veteran', ignore_case = FALSE)))
View(veterans)
pence <- filter(sentiment, str_detect(text, fixed('pence', ignore_case = FALSE)))
View(pence)
hillary <- veterans <- filter(sentiment, str_detect(text, fixed('hillary', ignore_case = FALSE)))
View(hillary)
hilary <- veterans <- filter(sentiment, str_detect(text, fixed('hilary', ignore_case = FALSE)))
hillary <- veterans <- filter(sentiment, str_detect(text, fixed('hillary', ignore_case = FALSE)))
hillary <- filter(sentiment, str_detect(text, fixed('hillary', ignore_case = FALSE)))
View(hillary)
View(hilary)
hillary <- filter(sentiment, str_detect(text, fixed('hillary', ignore_case = FALSE)))
hillary <- filter(sentiment, str_detect(text, fixed('hillary', ignore_case = TRUE)))
pence <- filter(sentiment, str_detect(text, fixed('pence', ignore_case = TRUE)))
veterans <- filter(sentiment, str_detect(text, fixed('veteran', ignore_case = TRUE)))
getTweets <- function(searchTerm) {
filteredTweets <- filter(sentiment, str_detect(text, fixed(searchTerm, ignore_case = TRUE)))
return(filteredTweets)
}
veterans <- getTweets('veterans')
View(veterans)
hillary <- getTweets('hillary')
pence <- getTweets('pence')
View(hillary)
return(filteredTweets)
getTweets <- function(searchTerm) {
filteredTweets <- filter(sentiment, str_detect(text, fixed(searchTerm, ignore_case = TRUE)))
filteredTweets %>%
mutate(subject = searchTerm)
return(filteredTweets)
}
veterans <- getTweets('veterans')
View(tweets)
View(getTweets)
getTweets <- function(searchTerm) {
filteredTweets <- filter(sentiment, str_detect(text, fixed(searchTerm, ignore_case = TRUE))) %>%
mutate(subject = searchTerm)
return(filteredTweets)
}
veterans <- getTweets('veterans')
View(veterans)
hillary <- getTweets('hillary')
pence <- getTweets('pence')
View(sentiment)
selectSentimentandSubject <- function(tweetList) {
select(tweetList, 'subject', 'sentiment')
}
veterans <- getTweets('veterans') %>%
selectSentimentandSubject()
View(veterans)
hillary <- getTweets('hillary')  %>%
selectSentimentandSubject()
pence <- getTweets('pence')  %>%
selectSentimentandSubject()
full_join(veterans, hillary)
full_join(veterans, hillary) %>%
full_join(pence)
joinedTweets <- full_join(veterans, hillary) %>%
full_join(pence)
View(joinedTweets)
ggplot(joinedTweets, aes(x=sentiment, color=subject)) +
geom_density()
ggplot(joinedTweets, aes(x=sentiment, color=subject)) +
geom_histogram()
ggplot(joinedTweets, aes(x=sentiment, fill=subject)) +
geom_density()
ggplot(joinedTweets, aes(x=sentiment, color=subject)) +
geom_density()
ggplot(joinedTweets, aes(x=sentiment, color=subject)) +
geom_boxplot()
ggplot(joinedTweets, aes(y=sentiment, color=subject)) +
geom_boxplot()
ggplot(joinedTweets, aes(y=sentiment, color=subject)) +
geom_density()
ggplot(joinedTweets, aes(x=sentiment, color=subject)) +
geom_density()
ggplot(joinedTweets, aes(x=sentiment, color=subject)) +
geom_histogram()
ggplot(joinedTweets, aes(x=sentiment, fill=subject)) +
geom_histogram()
ggplot(joinedTweets, aes(x=sentiment, color=subject)) +
geom_density()
library(tidyverse)
library(sentimentr)
library(jsonlite)
tweets <- fromJSON('trumptweets.json')
sentences <- tweets %>%
get_sentences()
sentiment <- sentiment(sentences)
View(sentiment)
sentiment <- sentiment(sentences) %>%
select('source', 'text', 'created_at', 'retweet_count', 'favorite_count', 'word_count', 'sentiment')
View(sentiment)
View(sentiment)
write_csv(sentiment, './tweets_cleaned')
write_csv(sentiment, './tweets_cleaned.csv')
library(tidyverse)
library(sentimentr)
library(jsonlite)
tweets <- fromJSON('trumptweets.json')
sentences <- tweets %>%
get_sentences()
sentiment <- sentiment(sentences) %>%
select('source', 'text', 'created_at', 'retweet_count', 'favorite_count', 'word_count', 'sentiment')
sentiment %>%
toJSON() %>%
write_lines('./tweets_cleaned.json')
View(sentiment)
